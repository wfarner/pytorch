cmake_minimum_required(VERSION 3.5 FATAL_ERROR)
project(c10 CXX)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# Main build file for the C10 library.

# ---[ Configure macro file.
set(C10_USE_GFLAGS ${USE_GFLAGS}) # used in cmake_macros.h.in
set(C10_USE_GLOG ${USE_GLOG}) # used in cmake_macros.h.in
set(C10_BUILD_SHARED_LIBS ${BUILD_SHARED_LIBS}) # used in cmake_macros.h.in
set(C10_USE_NUMA ${USE_NUMA})
set(C10_DISABLE_NUMA ${CAFFE2_DISABLE_NUMA}) # used in cmake_macros.h.in
configure_file(
    ${CMAKE_CURRENT_LIST_DIR}/macros/cmake_macros.h.in
    ${CMAKE_BINARY_DIR}/c10/macros/cmake_macros.h)

# Note: if you want to add ANY dependency to the c10 library, make sure you
# check with the core PyTorch developers as the dependendency will be
# transitively passed on to all libraries dependent on PyTorch.
file(GLOB C10_SRCS
        *.cpp
        core/*.cpp
        core/boxing/*.cpp
        core/dispatch/*.cpp
        core/op_registration/*.cpp
        core/impl/*.cpp
        macros/*.cpp
        util/*.cpp
        )
file(GLOB_RECURSE C10_ALL_TEST_FILES test/*.cpp)
file(GLOB_RECURSE C10_HEADERS *.h)

add_subdirectory(test)

if(USE_CUDA)
  add_subdirectory(cuda)
endif()

if(USE_ROCM)
  # NB: This directory is generated by the HIPIFY script; it's
  # not checked in
  add_subdirectory(hip)
endif()

# ---[ Installation
# Note: for now, we will put all export path into one single Caffe2Targets group
# to deal with the cmake deployment need. Inside the Caffe2Targets set, the
# individual libraries like libc10.so and libcaffe2.so are still self-contained.
install(DIRECTORY ${CMAKE_CURRENT_LIST_DIR}
        DESTINATION include
        FILES_MATCHING PATTERN "*.h")
install(FILES ${CMAKE_BINARY_DIR}/c10/macros/cmake_macros.h
        DESTINATION include/c10/macros)

set(C10_INCLUDE
    ${CMAKE_CURRENT_SOURCE_DIR}/../
    ${CMAKE_BINARY_DIR})

# Pass source and includes to parents
set(C10_SRCS ${C10_SRCS} PARENT_SCOPE)
set(C10_INCLUDE ${C10_INCLUDE} PARENT_SCOPE)
set(C10_CUDA_SRCS ${C10_CUDA_SRCS} PARENT_SCOPE)
set(C10_CUDA_INCLUDE ${C10_CUDA_INCLUDE} PARENT_SCOPE)
set(C10_HIP_SRCS ${C10_HIP_SRCS} PARENT_SCOPE)
set(C10_HIP_INCLUDE ${C10_HIP_INCLUDE} PARENT_SCOPE)
